<div class="p-4">
    <div>
        <label>Number of datapoints: </label>
        <select id="datapoints-selector">
        <% ["1 Day", "7 Days", "1 Month", "6 Months", "1 Year", "2 Years", "5 Years", "10 Years", "All"].each do |option| %>
            <% if option == "1 Month" %>
            <option value="<%= option %>" selected><%= option %></option>
            <% else %>
            <option value="<%= option %>"><%= option %></option>
            <% end %>
        <% end %>
        </select>
    </div>
    <div>
        <p id="chart_loading_message">Loading chart data...</p>
        <canvas id="chart_js_chart"></canvas>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-zoom@1.1.1/dist/chartjs-plugin-zoom.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation@1.1.1/dist/chartjs-plugin-annotation.min.js"></script>

<script>
    const data = <%= @data %>;
    const date_options = {
        day: '2-digit',
        month: '2-digit',
        year: 'numeric',
        hour: 'numeric',
        minute: 'numeric',
        hour12: false
    };

    const chartContainer = document.getElementById('chart_js_chart');
    const loadingMessage = document.getElementById('chart_loading_message');

    loadingMessage.style.display = 'block';

    new Chart(
        chartContainer,
        {
            type: 'line',
            data: {
                labels: data.map(column => new Date(column[0] * 1000).toLocaleDateString('da-DK', date_options)),
                datasets: [
                    {
                        label: 'Temp Min',
                        data: data.map(column => column[1])
                    },
                    {
                        label: 'Temp Max',
                        data: data.map(column => column[2])
                    }
                ]
            },
            options: {
                plugins: {
                    zoom: {
                        zoom: {
                            wheel: {
                                enabled: true,
                            },
                            mode: 'x',
                        }
                    }
                },
                scales: {
                    x: {
                        ticks: {
                            //Number of gridlines
                            maxTicksLimit: 40,
                            callback: function(val, index) {
                                return index % 2 === 0 ? this.getLabelForValue(val) : '';
                            },
                        }
                    }
                }
            }
        }
      );

    loadingMessage.style.display = 'none';
</script>